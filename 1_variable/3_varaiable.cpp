#include<iostream>
using namespace std;
int main()
{
    // 初期化
    int x; // 整数型の変数xを宣言
    int y; // 整数型の変数yを宣言

    x=18; // = :代入演算子（変数に代入している）
    y=63;

    cout << "xの値は" << x << endl;
    cout << "yの値は" << y << endl;
    cout << "合計は"  << x + y << endl;
    cout << "平均は"  << (x + y) / 2 << endl;
}
/*
変数:箱のイメージ
　　　変数を使うときは宣言する必要がある（型＋変数名）

void:何もないことを意味するデータ型
bool:true(真)とfalse(偽)の2つの値をとるデータ型

＊整数型
　整数型とは、有限範囲の連結した整数を表現する型。
　代表的なものとして

  short int:2バイトの正と負の整数(-32767~32767) , shortでも可
  int:2^32 (4バイト)の正と負の整数(-2147483647~2147483647)
  long int:基本intと一緒, -2147483647~2147483647 , longでも可
  long long:2^64(8バイト)の正と負の整数
​
　また、符号無し整数型と符号付き整数型がある
　
・符号無し整数型･･･0と正の整数値を表現する。intやlongの前にunsignedと書く
　unsigned short int:0~65535
  unsigned int:0~4294967295
　unsigned long int:0~4294967295
​
・符号付き整数型･･･負と0と正の整数値を表現する。intやlongの前にsignedと書く
　　　　　　　　　 ただし省略可能
​
＊浮動小数点型
　浮動小数点型は小数点以下の部分を持つ実数を表すことが出来る
  代表的なものとして

  double:2^64(8バイト)の正の実数
  float:floatは2^32(4バイト)、浮動小数型という面がdoubleと一緒
  long double：基本doubleと同じ(環境依存)

 *その他
  char  ：2^8(1バイト)のサイズをもつ文字型
  string：文字列リテラルを表す
*/
